{"version":3,"sources":["components/Year.js","components/Month.js","components/Dates.js","components/CalendarEvents.js","components/App.js","index.js"],"names":["Year","year","className","Month","month","setMonth","setYear","setButtonClicked","setSelectedDate","onClick","icon","faArrowLeft","number","name","getMonthsName","faArrowRight","Dates","originalDay","day","originalMonth","originalYear","selectedDate","eventList","selectedEvent","setSelectedEvent","selectedDayClick","e","target","innerHTML","includes","map","item","parseInt","array","tempYear","tempMonth","numOfDays","tempDate","Date","getDay","getMonth","setDate","getDate","push","key","getFullYear","filter","length","i","dateCalculator","CalendarEvents","setEventList","buttonClicked","eventValue","setEventValue","timeValue","setTimeValue","tempArray","eventName","eventTime","onChange","value","type","App","convertUTCDateToLocalDate","date","getTime","getTimezoneOffset","useState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.258f8666.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Year.css\";\r\n\r\nconst Year = ({ year }) => {\r\n  return (\r\n    <div className=\"year-container\">\r\n      <span className=\"year-text\">{year}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Year;\r\n","import React from \"react\";\r\nimport \"../styles/Month.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Month = ({\r\n  month,\r\n  setMonth,\r\n  year,\r\n  setYear,\r\n  setButtonClicked,\r\n  setSelectedDate\r\n}) => {\r\n  const getMonthsName = number => {\r\n    let name = null;\r\n    switch (number) {\r\n      case 0:\r\n        name = \"January\";\r\n        break;\r\n      case 1:\r\n        name = \"February\";\r\n        break;\r\n      case 2:\r\n        name = \"March\";\r\n        break;\r\n      case 3:\r\n        name = \"April\";\r\n        break;\r\n      case 4:\r\n        name = \"May\";\r\n        break;\r\n      case 5:\r\n        name = \"June\";\r\n        break;\r\n      case 6:\r\n        name = \"July\";\r\n        break;\r\n      case 7:\r\n        name = \"August\";\r\n        break;\r\n      case 8:\r\n        name = \"September\";\r\n        break;\r\n      case 9:\r\n        name = \"October\";\r\n        break;\r\n      case 10:\r\n        name = \"November\";\r\n        break;\r\n      case 11:\r\n        name = \"December\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const arrowLeftOnClick = () => {\r\n    setButtonClicked(false);\r\n    setSelectedDate(null);\r\n    if (month === 0) {\r\n      setYear(year - 1);\r\n      setMonth(11);\r\n    } else {\r\n      setMonth(month - 1);\r\n    }\r\n  };\r\n  const arrowRightOnClick = () => {\r\n    setButtonClicked(false);\r\n    setSelectedDate(null);\r\n    if (month === 11) {\r\n      setYear(year + 1);\r\n      setMonth(0);\r\n    } else {\r\n      setMonth(month + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"month-container\">\r\n      <FontAwesomeIcon\r\n        onClick={arrowLeftOnClick}\r\n        className=\"arrows\"\r\n        icon={faArrowLeft}\r\n      />\r\n      <span className=\"month-text\">{getMonthsName(month)}</span>\r\n      <FontAwesomeIcon\r\n        onClick={arrowRightOnClick}\r\n        className=\"arrows\"\r\n        icon={faArrowRight}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n","import React from \"react\";\r\nimport \"../styles/Dates.css\";\r\n\r\nconst Dates = ({\r\n  year,\r\n  month,\r\n  day,\r\n  originalDay,\r\n  originalMonth,\r\n  originalYear,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  eventList,\r\n  selectedEvent,\r\n  setSelectedEvent,\r\n  setButtonClicked\r\n}) => {\r\n  const selectedDayClick = e => {\r\n    const { innerHTML, className } = e.target;\r\n    if (className.includes(\"event-day\") && selectedEvent === null) {\r\n      if (selectedDate !== null) {\r\n        setSelectedDate(null);\r\n        setButtonClicked(false);\r\n      }\r\n      eventList.map(item => {\r\n        if (\r\n          item.year === year &&\r\n          item.month === month &&\r\n          item.day === parseInt(innerHTML, 10)\r\n        ) {\r\n          setSelectedEvent(item);\r\n        }\r\n        return item;\r\n      });\r\n    } else if (className.includes(\"event-day\") && selectedEvent !== null) {\r\n      setSelectedEvent(null);\r\n    } else if (\r\n      className.includes(\"date-current-month\") &&\r\n      selectedDate === null\r\n    ) {\r\n      if (selectedEvent !== null) {\r\n        setSelectedEvent(null);\r\n      }\r\n      setSelectedDate({\r\n        year: year,\r\n        month: month,\r\n        day: parseInt(innerHTML, 10)\r\n      });\r\n    } else if (\r\n      className.includes(\"date-current-month\") &&\r\n      selectedDate !== null\r\n    ) {\r\n      if (selectedEvent !== null) {\r\n        setSelectedEvent(null);\r\n      }\r\n      setSelectedDate(null);\r\n      setButtonClicked(false);\r\n    }\r\n  };\r\n\r\n  const dateCalculator = () => {\r\n    const array = [];\r\n    const tempYear = year;\r\n    const tempMonth = month;\r\n    const numOfDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    if (tempYear % 4 === 0 && tempYear % 100 !== 0 && tempYear % 400 !== 0) {\r\n      numOfDays[1] = 29;\r\n    }\r\n    let tempDate = new Date(`${tempYear}-${tempMonth + 1}-1`);\r\n\r\n    if (tempDate.getDay() !== 1) {\r\n      tempDate.setMonth(tempDate.getMonth() - 1);\r\n      tempDate.setDate(numOfDays[tempDate.getMonth()]);\r\n      while (tempDate.getDay() !== 1) {\r\n        tempDate.setDate(tempDate.getDate() - 1);\r\n      }\r\n    }\r\n    array.push(\r\n      <span\r\n        key={tempDate}\r\n        className={`date-cell ${\r\n          tempMonth !== tempDate.getMonth()\r\n            ? \"date-other-month\"\r\n            : \"date-current-month\"\r\n        } ${\r\n          tempDate.getFullYear() === originalYear &&\r\n          tempDate.getMonth() === originalMonth &&\r\n          tempDate.getDate() === originalDay\r\n            ? \"today\"\r\n            : \"\"\r\n        } ${\r\n          selectedDate !== null\r\n            ? tempDate.getDate() === selectedDate.day &&\r\n              tempDate.getMonth() === selectedDate.month &&\r\n              tempDate.getFullYear() === selectedDate.year\r\n              ? \"selected-day\"\r\n              : \"\"\r\n            : \"\"\r\n        } ${\r\n          eventList.filter(item => {\r\n            return (\r\n              tempDate.getDate() === item.day &&\r\n              tempDate.getMonth() === item.month &&\r\n              tempDate.getFullYear() === item.year\r\n            );\r\n          }).length > 0\r\n            ? \"event-day\"\r\n            : \"\"\r\n        }`}\r\n        onClick={selectedDayClick}\r\n      >\r\n        {tempDate.getDate() < 10\r\n          ? \"0\" + tempDate.getDate()\r\n          : tempDate.getDate()}\r\n      </span>\r\n    );\r\n    for (let i = 2; i <= 42; i++) {\r\n      if (tempDate.getDate() === numOfDays[tempDate.getMonth()]) {\r\n        tempDate.setDate(1);\r\n        tempDate.setMonth(tempDate.getMonth() + 1);\r\n        array.push(\r\n          <span\r\n            key={tempDate}\r\n            className={`date-cell ${\r\n              tempMonth !== tempDate.getMonth()\r\n                ? \"date-other-month\"\r\n                : \"date-current-month\"\r\n            } ${\r\n              tempDate.getFullYear() === originalYear &&\r\n              tempDate.getMonth() === originalMonth &&\r\n              tempDate.getDate() === originalDay\r\n                ? \"today\"\r\n                : \"\"\r\n            } ${\r\n              selectedDate !== null\r\n                ? tempDate.getDate() === selectedDate.day &&\r\n                  tempDate.getMonth() === selectedDate.month &&\r\n                  tempDate.getFullYear() === selectedDate.year\r\n                  ? \"selected-day\"\r\n                  : \"\"\r\n                : \"\"\r\n            } ${\r\n              eventList.filter(item => {\r\n                return (\r\n                  tempDate.getDate() === item.day &&\r\n                  tempDate.getMonth() === item.month &&\r\n                  tempDate.getFullYear() === item.year\r\n                );\r\n              }).length > 0\r\n                ? \"event-day\"\r\n                : \"\"\r\n            }`}\r\n            onClick={selectedDayClick}\r\n          >\r\n            {tempDate.getDate() < 10\r\n              ? \"0\" + tempDate.getDate()\r\n              : tempDate.getDate()}\r\n          </span>\r\n        );\r\n      } else {\r\n        tempDate.setDate(tempDate.getDate() + 1);\r\n        array.push(\r\n          <span\r\n            key={tempDate}\r\n            className={`date-cell ${\r\n              tempMonth !== tempDate.getMonth()\r\n                ? \"date-other-month\"\r\n                : \"date-current-month\"\r\n            } ${\r\n              tempDate.getFullYear() === originalYear &&\r\n              tempDate.getMonth() === originalMonth &&\r\n              tempDate.getDate() === originalDay\r\n                ? \"today\"\r\n                : \"\"\r\n            } ${\r\n              selectedDate !== null\r\n                ? tempDate.getDate() === selectedDate.day &&\r\n                  tempDate.getMonth() === selectedDate.month &&\r\n                  tempDate.getFullYear() === selectedDate.year\r\n                  ? \"selected-day\"\r\n                  : \"\"\r\n                : \"\"\r\n            } ${\r\n              eventList.filter(item => {\r\n                return (\r\n                  tempDate.getDate() === item.day &&\r\n                  tempDate.getMonth() === item.month &&\r\n                  tempDate.getFullYear() === item.year\r\n                );\r\n              }).length > 0\r\n                ? \"event-day\"\r\n                : \"\"\r\n            }`}\r\n            onClick={selectedDayClick}\r\n          >\r\n            {tempDate.getDate() < 10\r\n              ? \"0\" + tempDate.getDate()\r\n              : tempDate.getDate()}\r\n          </span>\r\n        );\r\n      }\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <div className=\"date-main-container\">\r\n      <div className=\"date-name-container\">\r\n        <span className=\"day-name\">Monday</span>\r\n        <span className=\"day-name\">Tuesday</span>\r\n        <span className=\"day-name\">Wednesday</span>\r\n        <span className=\"day-name\">Thursday</span>\r\n        <span className=\"day-name\">Friday</span>\r\n        <span className=\"day-name\">Saturday</span>\r\n        <span className=\"day-name\">Sunday</span>\r\n      </div>\r\n      <div className=\"date-container\">{dateCalculator()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dates;\r\n","import React from \"react\";\r\nimport \"../styles/CalendarEvents.css\";\r\n\r\nconst CalendarEvents = ({\r\n  selectedDate,\r\n  setSelectedDate,\r\n  eventList,\r\n  setEventList,\r\n  selectedEvent,\r\n  setSelectedEvent,\r\n  buttonClicked,\r\n  setButtonClicked,\r\n  eventValue,\r\n  setEventValue,\r\n  timeValue,\r\n  setTimeValue\r\n}) => {\r\n  const calendarEventDeleteHandler = () => {\r\n    const tempArray = eventList.filter(item => {\r\n      // if (\r\n      //   item.year !== selectedEvent.year ||\r\n      //   item.month !== selectedEvent.month ||\r\n      //   item.day !== selectedEvent.day\r\n      // ) {\r\n      //   return item;\r\n      // }\r\n      return (\r\n        item.year !== selectedEvent.year ||\r\n        item.month !== selectedEvent.month ||\r\n        item.day !== selectedEvent.day\r\n      );\r\n    });\r\n    setSelectedEvent(null);\r\n    setEventList(tempArray);\r\n  };\r\n\r\n  const calendarEventClickHandler = () => {\r\n    if (!buttonClicked) {\r\n      setButtonClicked(true);\r\n    } else if (\r\n      buttonClicked &&\r\n      selectedDate !== null &&\r\n      eventValue !== \"\" &&\r\n      eventList.filter(item => {\r\n        return (\r\n          selectedDate.year === item.year &&\r\n          selectedDate.month === item.month &&\r\n          selectedDate.day === item.day\r\n        );\r\n      }).length === 0\r\n    ) {\r\n      const tempArray = [...eventList];\r\n      tempArray.push({\r\n        year: selectedDate.year,\r\n        month: selectedDate.month,\r\n        day: selectedDate.day,\r\n        eventName: eventValue,\r\n        eventTime: timeValue\r\n      });\r\n      setEventList(tempArray);\r\n      setEventValue(\"\");\r\n      setTimeValue(\"12:00pm\");\r\n      setSelectedDate(null);\r\n      setButtonClicked(false);\r\n    }\r\n  };\r\n\r\n  const eventTextChangeHandler = e => {\r\n    const { value } = e.target;\r\n\r\n    setEventValue(value);\r\n  };\r\n\r\n  const timeEventHandler = e => {\r\n    const { value } = e.target;\r\n\r\n    setTimeValue(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-events-container\">\r\n      {selectedDate !== null && (\r\n        <div className=\"button-container\">\r\n          <button onClick={calendarEventClickHandler} className=\"event-button\">\r\n            Add event\r\n          </button>\r\n        </div>\r\n      )}\r\n      {buttonClicked && (\r\n        <div className=\"event-input-container\">\r\n          <div className=\"event-inputs\">\r\n            <label className=\"event-input-label\">\r\n              Please enter the event name\r\n              <input\r\n                className=\"event-text-input\"\r\n                onChange={eventTextChangeHandler}\r\n                value={eventValue}\r\n                type=\"text\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"event-inputs\">\r\n            <label className=\"event-input-label\">\r\n              Enter the time\r\n              <select\r\n                className=\"event-time-input\"\r\n                onChange={timeEventHandler}\r\n                value={timeValue}\r\n              >\r\n                <option value=\"12:00am\">12:00am</option>\r\n                <option value=\"01:00am\">01:00am</option>\r\n                <option value=\"02:00am\">02:00am</option>\r\n                <option value=\"03:00am\">03:00am</option>\r\n                <option value=\"04:00am\">04:00am</option>\r\n                <option value=\"05:00am\">05:00am</option>\r\n                <option value=\"06:00am\">06:00am</option>\r\n                <option value=\"07:00am\">07:00am</option>\r\n                <option value=\"08:00am\">08:00am</option>\r\n                <option value=\"09:00am\">09:00am</option>\r\n                <option value=\"10:00am\">10:00am</option>\r\n                <option value=\"11:00am\">11:00am</option>\r\n                <option value=\"12:00pm\">12:00pm</option>\r\n                <option value=\"01:00pm\">01:00pm</option>\r\n                <option value=\"02:00pm\">02:00pm</option>\r\n                <option value=\"03:00pm\">03:00pm</option>\r\n                <option value=\"04:00pm\">04:00pm</option>\r\n                <option value=\"05:00pm\">05:00pm</option>\r\n                <option value=\"06:00pm\">06:00pm</option>\r\n                <option value=\"07:00pm\">07:00pm</option>\r\n                <option value=\"08:00pm\">08:00pm</option>\r\n                <option value=\"09:00pm\">09:00pm</option>\r\n                <option value=\"10:00pm\">10:00pm</option>\r\n                <option value=\"11:00pm\">11:00pm</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n          <div className=\"event-inputs\">\r\n            <label className=\"event-input-label important-message\">\r\n              Please select the day!\r\n            </label>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {selectedEvent !== null && (\r\n        <div className=\"selected-event-container\">\r\n          <div className=\"button-container\">\r\n            <button\r\n              onClick={calendarEventDeleteHandler}\r\n              className=\"event-button event-delete-button\"\r\n            >\r\n              Delete event\r\n            </button>\r\n          </div>\r\n          <div className=\"event-describer-container\">\r\n            <div className=\"event-describer-item\">\r\n              <label>Event name: </label>\r\n              <span>{selectedEvent.eventName}</span>\r\n            </div>\r\n            <div className=\"event-describer-item\">\r\n              <label>Event time: </label>\r\n              <span>{selectedEvent.eventTime}</span>\r\n            </div>\r\n            <div className=\"event-describer-item\">\r\n              <label>Event date: </label>\r\n              <span>{`${selectedEvent.year}-${selectedEvent.month + 1}-${\r\n                selectedEvent.day\r\n              }`}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {selectedEvent === null && selectedDate === null && eventList.length > 0 && (\r\n        <div className=\"event-list-container\">\r\n          <p className=\"event-list-header\">Event list:</p>\r\n          {eventList.map(item => {\r\n            return (\r\n              <div\r\n                key={`event: ${item.year}-${item.month + 1}-${item.day}`}\r\n                className=\"event-describer-container\"\r\n              >\r\n                <div className=\"event-describer-item\">\r\n                  <label>Event name: </label>\r\n                  <span>{item.eventName}</span>\r\n                </div>\r\n                <div className=\"event-describer-item\">\r\n                  <label>Event time: </label>\r\n                  <span>{item.eventTime}</span>\r\n                </div>\r\n                <div className=\"event-describer-item\">\r\n                  <label>Event date: </label>\r\n                  <span>{`${item.year}-${item.month + 1}-${item.day}`}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarEvents;\r\n","import React, { useState } from \"react\";\r\nimport Year from \"./Year\";\r\nimport Month from \"./Month\";\r\nimport Dates from \"./Dates\";\r\nimport CalendarEvents from \"./CalendarEvents\";\r\n\r\nimport \"../styles/App.css\";\r\n\r\nconst App = () => {\r\n  const convertUTCDateToLocalDate = date => {\r\n    const newDate = new Date(\r\n      date.getTime() - date.getTimezoneOffset() * 60 * 1000\r\n    );\r\n    return newDate;\r\n  };\r\n\r\n  const day = convertUTCDateToLocalDate(new Date()).getDate();\r\n\r\n  const [month, setMonth] = useState(\r\n    convertUTCDateToLocalDate(new Date()).getMonth()\r\n  );\r\n  const [year, setYear] = useState(\r\n    convertUTCDateToLocalDate(new Date()).getFullYear()\r\n  );\r\n  const originalDay = convertUTCDateToLocalDate(new Date()).getDate();\r\n  const originalMonth = convertUTCDateToLocalDate(new Date()).getMonth();\r\n  const originalYear = convertUTCDateToLocalDate(new Date()).getFullYear();\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [eventList, setEventList] = useState([]);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  const [buttonClicked, setButtonClicked] = useState(false);\r\n  const [eventValue, setEventValue] = useState(\"\");\r\n  const [timeValue, setTimeValue] = useState(\"12:00pm\");\r\n\r\n  return (\r\n    <div className=\"app-main-container\">\r\n      <Year year={year} />\r\n      <Month\r\n        month={month}\r\n        setMonth={setMonth}\r\n        year={year}\r\n        setYear={setYear}\r\n        setButtonClicked={setButtonClicked}\r\n        setSelectedDate={setSelectedDate}\r\n      />\r\n      <Dates\r\n        year={year}\r\n        month={month}\r\n        day={day}\r\n        originalYear={originalYear}\r\n        originalMonth={originalMonth}\r\n        originalDay={originalDay}\r\n        selectedDate={selectedDate}\r\n        setSelectedDate={setSelectedDate}\r\n        eventList={eventList}\r\n        selectedEvent={selectedEvent}\r\n        setSelectedEvent={setSelectedEvent}\r\n        setButtonClicked={setButtonClicked}\r\n      />\r\n      <CalendarEvents\r\n        selectedDate={selectedDate}\r\n        setSelectedDate={setSelectedDate}\r\n        eventList={eventList}\r\n        setEventList={setEventList}\r\n        selectedEvent={selectedEvent}\r\n        setSelectedEvent={setSelectedEvent}\r\n        buttonClicked={buttonClicked}\r\n        setButtonClicked={setButtonClicked}\r\n        eventValue={eventValue}\r\n        setEventValue={setEventValue}\r\n        timeValue={timeValue}\r\n        setTimeValue={setTimeValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./styles/index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}